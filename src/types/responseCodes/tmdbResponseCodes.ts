export enum TmdbResponseCode {
  SUCCESS = 1,
  INVALID_SERVICE = 2,
  AUTHENTICATION_FAILED = 3,
  INVALID_FORMAT = 4,
  INVALID_PARAMETERS = 5,
  INVALID_ID = 6,
  INVALID_API_KEY = 7,
  DUPLICATE_ENTRY = 8,
  SERVICE_OFFLINE = 9,
  SUSPENDED_API_KEY = 10,
  INTERNAL_ERROR = 11,
  ITEM_UPDATED = 12,
  ITEM_DELETED = 13,
  AUTHENTICATION_FAILED_GENERIC = 14,
  FAILED = 15,
  DEVICE_DENIED = 16,
  SESSION_DENIED = 17,
  VALIDATION_FAILED = 18,
  INVALID_ACCEPT_HEADER = 19,
  INVALID_DATE_RANGE = 20,
  ENTRY_NOT_FOUND = 21,
  INVALID_PAGE = 22,
  INVALID_DATE = 23,
  REQUEST_TIMED_OUT = 24,
  REQUEST_OVER_LIMIT = 25,
  MISSING_CREDENTIALS = 26,
  TOO_MANY_APPEND_OBJECTS = 27,
  INVALID_TIMEZONE = 28,
  ACTION_CONFIRMATION_REQUIRED = 29,
  INVALID_CREDENTIALS = 30,
  ACCOUNT_DISABLED = 31,
  EMAIL_NOT_VERIFIED = 32,
  INVALID_REQUEST_TOKEN = 33,
  RESOURCE_NOT_FOUND = 34,
  INVALID_TOKEN = 35,
  TOKEN_NO_WRITE_PERMISSION = 36,
  SESSION_NOT_FOUND = 37,
  NO_PERMISSION_TO_EDIT = 38,
  RESOURCE_PRIVATE = 39,
  NOTHING_TO_UPDATE = 40,
  REQUEST_TOKEN_NOT_APPROVED = 41,
  METHOD_NOT_SUPPORTED = 42,
  BACKEND_CONNECTION_FAILED = 43,
  INVALID_ID_GENERIC = 44,
  USER_SUSPENDED = 45,
  API_MAINTENANCE = 46,
  INVALID_INPUT = 47,
}

export interface TmdbResponseCodeDetail {
  code: TmdbResponseCode;
  httpStatus: number;
  message: string;
}

export const TmdbResponseCodeDetails: Record<TmdbResponseCode, TmdbResponseCodeDetail> = {
  [TmdbResponseCode.SUCCESS]: { code: TmdbResponseCode.SUCCESS, httpStatus: 200, message: 'Success.' },
  [TmdbResponseCode.INVALID_SERVICE]: { code: TmdbResponseCode.INVALID_SERVICE, httpStatus: 501, message: 'Invalid service: this service does not exist.' },
  [TmdbResponseCode.AUTHENTICATION_FAILED]: { code: TmdbResponseCode.AUTHENTICATION_FAILED, httpStatus: 401, message: 'Authentication failed: You do not have permissions to access the service.' },
  [TmdbResponseCode.INVALID_FORMAT]: { code: TmdbResponseCode.INVALID_FORMAT, httpStatus: 405, message: "Invalid format: This service doesn't exist in that format." },
  [TmdbResponseCode.INVALID_PARAMETERS]: { code: TmdbResponseCode.INVALID_PARAMETERS, httpStatus: 422, message: 'Invalid parameters: Your request parameters are incorrect.' },
  [TmdbResponseCode.INVALID_ID]: { code: TmdbResponseCode.INVALID_ID, httpStatus: 404, message: 'Invalid id: The pre-requisite id is invalid or not found.' },
  [TmdbResponseCode.INVALID_API_KEY]: { code: TmdbResponseCode.INVALID_API_KEY, httpStatus: 401, message: 'Invalid API key: You must be granted a valid key.' },
  [TmdbResponseCode.DUPLICATE_ENTRY]: { code: TmdbResponseCode.DUPLICATE_ENTRY, httpStatus: 403, message: 'Duplicate entry: The data you tried to submit already exists.' },
  [TmdbResponseCode.SERVICE_OFFLINE]: { code: TmdbResponseCode.SERVICE_OFFLINE, httpStatus: 503, message: 'Service offline: This service is temporarily offline, try again later.' },
  [TmdbResponseCode.SUSPENDED_API_KEY]: { code: TmdbResponseCode.SUSPENDED_API_KEY, httpStatus: 401, message: 'Suspended API key: Access to your account has been suspended, contact TMDB.' },
  [TmdbResponseCode.INTERNAL_ERROR]: { code: TmdbResponseCode.INTERNAL_ERROR, httpStatus: 500, message: 'Internal error: Something went wrong, contact TMDB.' },
  [TmdbResponseCode.ITEM_UPDATED]: { code: TmdbResponseCode.ITEM_UPDATED, httpStatus: 201, message: 'The item/record was updated successfully.' },
  [TmdbResponseCode.ITEM_DELETED]: { code: TmdbResponseCode.ITEM_DELETED, httpStatus: 200, message: 'The item/record was deleted successfully.' },
  [TmdbResponseCode.AUTHENTICATION_FAILED_GENERIC]: { code: TmdbResponseCode.AUTHENTICATION_FAILED_GENERIC, httpStatus: 401, message: 'Authentication failed.' },
  [TmdbResponseCode.FAILED]: { code: TmdbResponseCode.FAILED, httpStatus: 500, message: 'Failed.' },
  [TmdbResponseCode.DEVICE_DENIED]: { code: TmdbResponseCode.DEVICE_DENIED, httpStatus: 401, message: 'Device denied.' },
  [TmdbResponseCode.SESSION_DENIED]: { code: TmdbResponseCode.SESSION_DENIED, httpStatus: 401, message: 'Session denied.' },
  [TmdbResponseCode.VALIDATION_FAILED]: { code: TmdbResponseCode.VALIDATION_FAILED, httpStatus: 400, message: 'Validation failed.' },
  [TmdbResponseCode.INVALID_ACCEPT_HEADER]: { code: TmdbResponseCode.INVALID_ACCEPT_HEADER, httpStatus: 406, message: 'Invalid accept header.' },
  [TmdbResponseCode.INVALID_DATE_RANGE]: { code: TmdbResponseCode.INVALID_DATE_RANGE, httpStatus: 422, message: 'Invalid date range: Should be a range no longer than 14 days.' },
  [TmdbResponseCode.ENTRY_NOT_FOUND]: { code: TmdbResponseCode.ENTRY_NOT_FOUND, httpStatus: 200, message: 'Entry not found: The item you are trying to edit cannot be found.' },
  [TmdbResponseCode.INVALID_PAGE]: { code: TmdbResponseCode.INVALID_PAGE, httpStatus: 400, message: 'Invalid page: Pages start at 1 and max at 500. They are expected to be an integer.' },
  [TmdbResponseCode.INVALID_DATE]: { code: TmdbResponseCode.INVALID_DATE, httpStatus: 400, message: 'Invalid date: Format needs to be YYYY-MM-DD.' },
  [TmdbResponseCode.REQUEST_TIMED_OUT]: { code: TmdbResponseCode.REQUEST_TIMED_OUT, httpStatus: 504, message: 'Your request to the backend server timed out. Try again.' },
  [TmdbResponseCode.REQUEST_OVER_LIMIT]: { code: TmdbResponseCode.REQUEST_OVER_LIMIT, httpStatus: 429, message: 'Your request count (#) is over the allowed limit of (40).' },
  [TmdbResponseCode.MISSING_CREDENTIALS]: { code: TmdbResponseCode.MISSING_CREDENTIALS, httpStatus: 400, message: 'You must provide a username and password.' },
  [TmdbResponseCode.TOO_MANY_APPEND_OBJECTS]: { code: TmdbResponseCode.TOO_MANY_APPEND_OBJECTS, httpStatus: 400, message: 'Too many append to response objects: The maximum number of remote calls is 20.' },
  [TmdbResponseCode.INVALID_TIMEZONE]: { code: TmdbResponseCode.INVALID_TIMEZONE, httpStatus: 400, message: 'Invalid timezone: Please consult the documentation for a valid timezone.' },
  [TmdbResponseCode.ACTION_CONFIRMATION_REQUIRED]: { code: TmdbResponseCode.ACTION_CONFIRMATION_REQUIRED, httpStatus: 400, message: 'You must confirm this action: Please provide a confirm=true parameter.' },
  [TmdbResponseCode.INVALID_CREDENTIALS]: { code: TmdbResponseCode.INVALID_CREDENTIALS, httpStatus: 401, message: 'Invalid username and/or password: You did not provide a valid login.' },
  [TmdbResponseCode.ACCOUNT_DISABLED]: { code: TmdbResponseCode.ACCOUNT_DISABLED, httpStatus: 401, message: 'Account disabled: Your account is no longer active. Contact TMDB if this is an error.' },
  [TmdbResponseCode.EMAIL_NOT_VERIFIED]: { code: TmdbResponseCode.EMAIL_NOT_VERIFIED, httpStatus: 401, message: 'Email not verified: Your email address has not been verified.' },
  [TmdbResponseCode.INVALID_REQUEST_TOKEN]: { code: TmdbResponseCode.INVALID_REQUEST_TOKEN, httpStatus: 401, message: 'Invalid request token: The request token is either expired or invalid.' },
  [TmdbResponseCode.RESOURCE_NOT_FOUND]: { code: TmdbResponseCode.RESOURCE_NOT_FOUND, httpStatus: 404, message: 'The resource you requested could not be found.' },
  [TmdbResponseCode.INVALID_TOKEN]: { code: TmdbResponseCode.INVALID_TOKEN, httpStatus: 401, message: 'Invalid token.' },
  [TmdbResponseCode.TOKEN_NO_WRITE_PERMISSION]: { code: TmdbResponseCode.TOKEN_NO_WRITE_PERMISSION, httpStatus: 401, message: "This token hasn't been granted write permission by the user." },
  [TmdbResponseCode.SESSION_NOT_FOUND]: { code: TmdbResponseCode.SESSION_NOT_FOUND, httpStatus: 404, message: 'The requested session could not be found.' },
  [TmdbResponseCode.NO_PERMISSION_TO_EDIT]: { code: TmdbResponseCode.NO_PERMISSION_TO_EDIT, httpStatus: 401, message: "You don't have permission to edit this resource." },
  [TmdbResponseCode.RESOURCE_PRIVATE]: { code: TmdbResponseCode.RESOURCE_PRIVATE, httpStatus: 401, message: 'This resource is private.' },
  [TmdbResponseCode.NOTHING_TO_UPDATE]: { code: TmdbResponseCode.NOTHING_TO_UPDATE, httpStatus: 200, message: 'Nothing to update.' },
  [TmdbResponseCode.REQUEST_TOKEN_NOT_APPROVED]: { code: TmdbResponseCode.REQUEST_TOKEN_NOT_APPROVED, httpStatus: 422, message: "This request token hasn't been approved by the user." },
  [TmdbResponseCode.METHOD_NOT_SUPPORTED]: { code: TmdbResponseCode.METHOD_NOT_SUPPORTED, httpStatus: 405, message: 'This request method is not supported for this resource.' },
  [TmdbResponseCode.BACKEND_CONNECTION_FAILED]: { code: TmdbResponseCode.BACKEND_CONNECTION_FAILED, httpStatus: 502, message: "Couldn't connect to the backend server." },
  [TmdbResponseCode.INVALID_ID_GENERIC]: { code: TmdbResponseCode.INVALID_ID_GENERIC, httpStatus: 500, message: 'The ID is invalid.' },
  [TmdbResponseCode.USER_SUSPENDED]: { code: TmdbResponseCode.USER_SUSPENDED, httpStatus: 403, message: 'This user has been suspended.' },
  [TmdbResponseCode.API_MAINTENANCE]: { code: TmdbResponseCode.API_MAINTENANCE, httpStatus: 503, message: 'The API is undergoing maintenance. Try again later.' },
  [TmdbResponseCode.INVALID_INPUT]: { code: TmdbResponseCode.INVALID_INPUT, httpStatus: 400, message: 'The input is not valid.' },
};